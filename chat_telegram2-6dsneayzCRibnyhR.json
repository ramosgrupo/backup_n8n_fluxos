{"createdAt":"2025-03-16T19:14:14.227Z","updatedAt":"2025-03-16T19:14:14.227Z","id":"6dsneayzCRibnyhR","name":"chat_telegram2","active":false,"nodes":[{"parameters":{"content":"## 1. Baixe e extraia documentos de política interna\n[Leia mais sobre a ferramenta de solicitação HTTP](https://docs.n8n.io/integrations/builtin/core-nodes/n8n-nodes-base.httprequest)\n\nComece importando os documentos PDF que contêm suas políticas internas e perguntas frequentes — eles se tornarão a base de conhecimento para seu Assistente de Helpdesk Interno. Por exemplo, você pode armazenar um manual da empresa ou PDFs de política de TI/RH em uma unidade compartilhada ou armazenamento em nuvem e consultar um link de download direto aqui.\n\nNesta demonstração, usaremos o nó **HTTP Request** para buscar o arquivo PDF de uma determinada URL e, em seguida, analisar seu conteúdo de texto usando o nó **Extract from File**. Uma vez extraídos, esses pedaços de texto serão usados ​​para construir o armazenamento de vetores que sustenta as respostas do seu chatbot de helpdesk.\n\n[Exemplo de Manual do Funcionário com Políticas](https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf)","height":460,"width":780,"color":7},"id":"46b31603-86f3-4bde-9649-1a7afadf838c","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","position":[0,0],"typeVersion":1},{"parameters":{},"id":"2143bd5f-9b6e-4b7c-b7b6-9838cd717445","name":"When clicking ‘Test workflow’","type":"n8n-nodes-base.manualTrigger","position":[220,300],"typeVersion":1},{"parameters":{"url":"https://s3.amazonaws.com/scschoolfiles/656/employee_handbook_print_1.pdf","options":{}},"id":"6310cc08-5a9d-4822-9e96-4dae9b2c18ed","name":"HTTP Request","type":"n8n-nodes-base.httpRequest","position":[400,300],"typeVersion":4.2},{"parameters":{"operation":"pdf","options":{}},"id":"79f2a2d3-8d59-452b-a175-252ba07b1eb2","name":"Extract from File","type":"n8n-nodes-base.extractFromFile","position":[580,300],"typeVersion":1},{"parameters":{"content":"## 2. Crie o armazenamento de vetores de política interna\n[Leia mais sobre o armazenamento de vetores na memória](https://docs.n8n.io/integrations/builtin/cluster-nodes/root-nodes/n8n-nodes-langchain.vectorstoreinmemory/)\n\nOs armazenamentos de vetores potencializam o processo de recuperação ao combinar as perguntas de linguagem natural de um usuário com blocos de texto relevantes. Transformaremos seu texto de política interna extraído em embeddings de vetores e os armazenaremos em uma estrutura semelhante a um banco de dados.\n\nUsaremos o PostgreSQL, que tem suporte a vetores prontos para produção.\n\n**Como funciona** \n1. O texto extraído na Etapa 1 é dividido em segmentos gerenciáveis ​​(blocos). \n2. Um modelo de embedding transforma esses segmentos em vetores numéricos. \n3. Esses vetores, junto com os metadados, são armazenados no PostgreSQL.\n4. Quando os usuários fazem uma pergunta, sua consulta é incorporada e correspondida aos vetores mais relevantes, melhorando a precisão da resposta do chatbot.","height":1020,"width":780,"color":7},"id":"0f51d613-f69a-4868-a8ba-0f59650a1bb5","name":"Sticky Note1","type":"n8n-nodes-base.stickyNote","position":[840,0],"typeVersion":1},{"parameters":{"mode":"insert","options":{}},"id":"1e9e227f-5317-4b09-bef9-5dfb6c66e3d7","name":"Create HR Policies","type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","position":[920,380],"typeVersion":1},{"parameters":{"options":{}},"id":"9bd6472d-1bd8-4a09-bb3f-41c1f3dcecfa","name":"Embeddings OpenAI","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[900,600],"typeVersion":1.2,"credentials":{"openAiApi":{"id":"icLZwG73tUY83J9Q","name":"OpenAi DeepSeek1"}}},{"parameters":{"jsonMode":"expressionData","jsonData":"={{ $('Extract from File').item.json.text }}","options":{}},"id":"cc51b3ee-1ba1-44f6-809b-bf6e0fc31def","name":"Default Data Loader","type":"@n8n/n8n-nodes-langchain.documentDefaultDataLoader","position":[1060,620],"typeVersion":1},{"parameters":{"chunkSize":2000,"options":{}},"id":"c348da37-2cad-49f3-9b97-6180d07b2d94","name":"Recursive Character Text Splitter","type":"@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter","position":[1160,840],"typeVersion":1},{"parameters":{"updates":["message"],"additionalFields":{}},"id":"cb0a66b2-a8da-4008-95e3-89ec0d33b885","name":"Telegram Trigger","type":"n8n-nodes-base.telegramTrigger","position":[1720,520],"webhookId":"65f501de-3c14-4089-9b9d-8956676bebf3","typeVersion":1.1,"credentials":{"telegramApi":{"id":"OEVyx32eZfdmpvWD","name":"Telegram account"}}},{"parameters":{"rules":{"values":[{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"operator":{"type":"array","operation":"contains","rightType":"any"},"leftValue":"={{ $json.message.keys()}}","rightValue":"text"}]},"renameOutput":true,"outputKey":"Text"},{"conditions":{"options":{"version":2,"leftValue":"","caseSensitive":true,"typeValidation":"strict"},"combinator":"and","conditions":[{"id":"d16eb899-cccb-41b6-921e-172c525ff92c","operator":{"type":"array","operation":"contains","rightType":"any"},"leftValue":"={{ $json.message.keys()}}","rightValue":"voice"}]},"renameOutput":true,"outputKey":"Audio"}]},"options":{"fallbackOutput":"extra"}},"id":"90903c61-3d2d-4f91-81f6-065050649309","name":"Verify Message Type","type":"n8n-nodes-base.switch","position":[1920,520],"typeVersion":3.2,"alwaysOutputData":false},{"parameters":{"resource":"audio","operation":"transcribe","binaryPropertyName":"=data","options":{}},"id":"fca9de03-2908-424b-b7a4-021c0202b16b","name":"OpenAI","type":"@n8n/n8n-nodes-langchain.openAi","position":[2640,660],"typeVersion":1.8,"credentials":{"openAiApi":{"id":"icLZwG73tUY83J9Q","name":"OpenAi DeepSeek1"}}},{"parameters":{"resource":"file","fileId":"={{ $json.message.voice.file_id }}"},"id":"63382bb2-9364-4ada-a2de-89193d80de03","name":"Telegram1","type":"n8n-nodes-base.telegram","position":[2420,660],"typeVersion":1.2,"webhookId":"36abbbfe-0c04-4121-9118-5b120f38a0e2","credentials":{"telegramApi":{"id":"OEVyx32eZfdmpvWD","name":"Telegram account"}}},{"parameters":{"chatId":"={{ $json.message.chat.id }}","text":"I'm not able to process this message type.","additionalFields":{}},"id":"3275e08e-1bf4-4363-b91e-f9e85dc57727","name":"Unsupported Message Type","type":"n8n-nodes-base.telegram","position":[2500,840],"typeVersion":1.2,"webhookId":"de74a5a5-5917-4a08-9036-c808ce976690","credentials":{"telegramApi":{"id":"OEVyx32eZfdmpvWD","name":"Telegram account"}}},{"parameters":{"promptType":"define","text":"={{ $json.text }}","options":{"systemMessage":"You are a helpful assistant for HR and employee policies"}},"id":"f0da0abd-3cd1-4050-86b4-38000f005d12","name":"AI Agent","type":"@n8n/n8n-nodes-langchain.agent","position":[3160,680],"typeVersion":1.7},{"parameters":{"options":{}},"id":"86dd4fab-f08c-4941-829d-9992b4dc7a7e","name":"OpenAI Chat Model","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[3100,1120],"typeVersion":1.1},{"parameters":{"sessionIdType":"customKey","sessionKey":"={{ $('Telegram Trigger').item.json.message.chat.id }}"},"id":"b3740d01-7086-4af4-b1ee-a1df7ffac3ec","name":"Postgres Chat Memory","type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","position":[3360,1120],"typeVersion":1.3},{"parameters":{"name":"hr_employee_policies","description":"data for HR and employee policies"},"id":"23f4079f-04b5-40c7-9d30-0da2db8ef9c7","name":"Answer questions with a vector store","type":"@n8n/n8n-nodes-langchain.toolVectorStore","position":[3660,860],"typeVersion":1},{"parameters":{"options":{}},"id":"eaf22664-6ddb-43fa-a39e-fd2af9857ffd","name":"Postgres PGVector Store","type":"@n8n/n8n-nodes-langchain.vectorStorePGVector","position":[3520,1060],"typeVersion":1},{"parameters":{"options":{}},"id":"9d5b1cf1-27d2-4d07-8332-82a7b0c3f5c6","name":"OpenAI Chat Model1","type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","position":[3940,1060],"typeVersion":1.1},{"parameters":{"options":{}},"id":"7f610516-ff4e-41ee-b6f1-cec1a5cd1be6","name":"Embeddings OpenAI1","type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","position":[3600,1200],"typeVersion":1.2},{"parameters":{"chatId":"={{ $('Telegram Trigger').first().json.message.chat.id }}","text":"={{ $json.output }}","additionalFields":{}},"id":"c26d5d29-03db-4300-9d23-66f78af0f240","name":"Telegram","type":"n8n-nodes-base.telegram","position":[4500,700],"typeVersion":1.2,"webhookId":"c1674511-277f-4c5f-9d80-3d9dd31f3c5b","credentials":{"telegramApi":{"id":"OEVyx32eZfdmpvWD","name":"Telegram account"}}},{"parameters":{"assignments":{"assignments":[{"id":"403b336f-87ce-4bef-a5f2-1640425f8198","name":"text","type":"string","value":"={{ $json.message.text }}"}]},"includeOtherFields":true,"options":{}},"id":"3ead78c7-b4fe-4a4d-87d9-7bcac0023f9e","name":"Edit Fields","type":"n8n-nodes-base.set","position":[2420,480],"typeVersion":3.4},{"parameters":{"content":"## 3. Manipulando mensagens com suporte de fallback\n\nEste fluxo de trabalho processa mensagens do Telegram para manipular entradas de **texto** e **voz**, com um fallback para tipos de mensagens não suportados. Veja como funciona:\n\n1. **Nó de gatilho**:\n- O fluxo de trabalho começa com um gatilho do Telegram que escuta mensagens recebidas.\n\n2. **Verificação do tipo de mensagem**:\n- O fluxo de trabalho verifica o tipo de mensagem recebida:\n- **Mensagem de texto**: se a mensagem contiver `$json.message.text`, ela será enviada diretamente ao agente.\n- **Mensagem de voz**: se a mensagem contiver `$json.message.voice`, o áudio será transcrito em texto usando um serviço de transcrição, e o resultado será enviado ao agente.\n\n3. **Fallback Path**:\n- Se a mensagem não for texto nem voz, uma resposta de fallback será retornada:\n`\"Desculpe, não consegui processar sua mensagem. Tente novamente.\"`\n\n4. **Unified Output**:\n- Tanto as mensagens de texto quanto as mensagens de voz transcritas são convertidas no mesmo formato antes de serem enviadas ao agente, garantindo consistência no manuseio.","height":1020,"width":1300,"color":4},"id":"e4193099-c83d-4478-9a39-31b0f7ecb29e","name":"Sticky Note2","type":"n8n-nodes-base.stickyNote","position":[1640,0],"typeVersion":1},{"parameters":{"content":"A configuração precisa ser executada no início ou quando os dados são alterados","height":80,"width":260},"id":"6f2698f4-d465-47cd-a08d-be1ff6dcbfd9","name":"Sticky Note3","type":"n8n-nodes-base.stickyNote","position":[520,500],"typeVersion":1},{"parameters":{"content":"## 4. O agente de IA de RH e TI fornece suporte de helpdesk\nOs agentes de IA da n8n permitem que você crie fluxos de trabalho inteligentes e interativos que podem acessar e recuperar dados de bases de conhecimento internas. Neste fluxo de trabalho, o agente de IA é configurado para fornecer respostas para consultas de RH e TI executando a Geração Aumentada de Recuperação (RAG) em documentos internos.\n\n### Como funciona:\n- **Acesso à base de conhecimento interna**: Uma **ferramenta de armazenamento de vetores** é usada para conectar o agente à base de conhecimento de RH e TI criada anteriormente no fluxo de trabalho. Isso permite que o agente busque respostas precisas e específicas para consultas de funcionários.\n- **Memória de bate-papo**: Um **subnó de memória de bate-papo** rastreia a conversa, permitindo que o agente mantenha o contexto em várias consultas do mesmo usuário, criando uma experiência personalizada e coesa.\n- **Respostas de consulta dinâmicas**: Se os funcionários perguntarem sobre políticas, saldos de licenças ou solução de problemas técnicos, o agente recupera dados relevantes do armazenamento de vetores e cria uma resposta em linguagem natural.\n\nAo integrar o agente de IA com um armazenamento de vetores e memória de bate-papo, esse fluxo de trabalho capacita seu chatbot de helpdesk de RH e TI a fornecer suporte rápido, preciso e conversacional aos funcionários. \n\nO PostgrSQL é usado em todas as etapas para simplificar o desenvolvimento na produção.","height":1420,"width":1180,"color":4},"id":"5db86f94-88e0-49d2-adcc-3d5a3e69256a","name":"Sticky Note4","type":"n8n-nodes-base.stickyNote","position":[2980,0],"typeVersion":1},{"parameters":{"content":"## 5. Enviar mensagem\n\nA parte mais simples e importante :)","height":280,"width":540,"color":4},"id":"b4e3becb-343a-4fa7-827d-04ee66ee1042","name":"Sticky Note5","type":"n8n-nodes-base.stickyNote","position":[4200,580],"typeVersion":1}],"connections":{"OpenAI":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"AI Agent":{"main":[[{"node":"Telegram","type":"main","index":0}]]},"Telegram1":{"main":[[{"node":"OpenAI","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"AI Agent","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Telegram Trigger":{"main":[[{"node":"Verify Message Type","type":"main","index":0}]]},"Embeddings OpenAI":{"ai_embedding":[[{"node":"Create HR Policies","type":"ai_embedding","index":0}]]},"Extract from File":{"main":[[{"node":"Create HR Policies","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Postgres PGVector Store","type":"ai_embedding","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Answer questions with a vector store","type":"ai_languageModel","index":0}]]},"Default Data Loader":{"ai_document":[[{"node":"Create HR Policies","type":"ai_document","index":0}]]},"Verify Message Type":{"main":[[{"node":"Edit Fields","type":"main","index":0}],[{"node":"Telegram1","type":"main","index":0}],[{"node":"Unsupported Message Type","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"Postgres PGVector Store":{"ai_vectorStore":[[{"node":"Answer questions with a vector store","type":"ai_vectorStore","index":0}]]},"Recursive Character Text Splitter":{"ai_textSplitter":[[{"node":"Default Data Loader","type":"ai_textSplitter","index":0}]]},"When clicking ‘Test workflow’":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"Answer questions with a vector store":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"23b060c3-3a9a-4eb6-be2b-09acf789f384","triggerCount":0,"tags":[]}